{
  "version": 3,
  "sources": ["src/app/shared/services/services.login.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable, of, tap, throwError } from 'rxjs';\nimport { DataLogin } from '../../home/login/login.entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesLogin {\n  \n    //private url = \"https://curso.sunsetmanager.com/api\"\n\n    private url=\"https://68a25a8ec5a31eb7bb1cc6a1.mockapi.io/\"\n\n    private data: DataLogin[] = [];\n\n    constructor(private http:HttpClient) {\n\n      \n\n    }\n\n    loadData(): Observable<DataLogin[]> {\n    return this.http.get<DataLogin[]>(`${this.url}/user`).pipe(\n      tap((response:DataLogin[]) => this.data = response) // guardamos en memoria\n    );\n  }\n\n\n    validarLogin(email: string, password: string): Observable<DataLogin> {\n\n      try {\n        const user = this.data.find(user => user.email === email && user.password === password)\n\n        if (user) {\n\n          return of(user);\n\n        } else {\n\n          return throwError(() => ({\n          statusCode: 401,\n          message: 'user NOT FOUND'\n        }));\n        }\n\n      } catch(err) {\n\n         return throwError(() => ({\n            statusCode: 500,\n            message: err\n          }));\n\n      }\n\n\n\n\n    }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;IAQa;;;;;AARb;AACA;AACA;AAMO,IAAM,gBAAN,MAAMA,eAAa;MAQF;;MAJZ,MAAI;MAEJ,OAAoB,CAAA;MAE5B,YAAoB,MAAe;AAAf,aAAA,OAAA;MAIpB;MAEA,WAAQ;AACR,eAAO,KAAK,KAAK,IAAiB,GAAG,KAAK,GAAG,OAAO,EAAE;UACpD,IAAI,CAAC,aAAyB,KAAK,OAAO,QAAQ;;;MAEtD;MAGE,aAAa,OAAe,UAAgB;AAE1C,YAAI;AACF,gBAAM,OAAO,KAAK,KAAK,KAAK,CAAAC,UAAQA,MAAK,UAAU,SAASA,MAAK,aAAa,QAAQ;AAEtF,cAAI,MAAM;AAER,mBAAO,GAAG,IAAI;UAEhB,OAAO;AAEL,mBAAO,WAAW,OAAO;cACzB,YAAY;cACZ,SAAS;cACT;UACF;QAEF,SAAQ,KAAK;AAEV,iBAAO,WAAW,OAAO;YACtB,YAAY;YACZ,SAAS;YACT;QAEN;MAKF;;;;;AAlDS,oBAAa,WAAA;MAHzB,WAAW;QACV,YAAY;OACb;OACY,aAAa;;;",
  "names": ["ServicesLogin", "user"]
}
