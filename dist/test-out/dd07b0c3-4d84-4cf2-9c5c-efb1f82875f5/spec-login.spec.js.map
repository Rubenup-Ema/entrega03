{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\home\\login\\login.html", "angular:jit:style:src\\app\\home\\login\\login.scss", "src/app/home/login/login.ts", "src/app/home/login/login.spec.ts"],
  "sourcesContent": ["<div class=\"d-flex justify-content-center align-items-center vh-100\">\n  <div class=\"card p-4 shadow\" style=\"min-width: 350px;\">\n    <h3 class=\"text-center mb-4\">Iniciar Sesi\u00F3n</h3>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <!-- Campo Usuario -->\n  <div class=\"mb-3\">\n    <label for=\"username\" class=\"form-label\">Usuario</label>\n    <input\n      type=\"text\"\n      id=\"username\"\n      class=\"form-control\"\n      formControlName=\"username\"\n      placeholder=\"alice@gmail.com\"\n    />\n    <div\n      class=\"text-danger small\"\n      *ngIf=\"form.get('username')?.touched && form.get('username')?.invalid\"\n    >\n      El usuario es obligatorio, verifique el formato del email\n    </div>\n  </div>\n\n  <!-- Campo Contrase\u00F1a -->\n  <div class=\"mb-3\">\n    <label for=\"password\" class=\"form-label\">Contrase\u00F1a</label>\n    <input\n      type=\"password\"\n      id=\"password\"\n      class=\"form-control\"\n      formControlName=\"password\"\n      placeholder=\"password123\"\n    />\n    <div\n      class=\"text-danger small\"\n      *ngIf=\"form.get('password')?.touched && form.get('password')?.invalid\"\n    >\n      La contrase\u00F1a es obligatoria al menos 5 caracteres\n    </div>\n  </div>\n\n  <!-- Bot\u00F3n Submit -->\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary w-100\"\n    [disabled]=\"form.invalid\"\n  >\n    Entrar\n  </button>\n\n  <span *ngIf=\"procesando\">Espere procesando...</span>\n\n</form>\n </div>\n</div>", "/* src/app/home/login/login.scss */\n/*# sourceMappingURL=login.css.map */\n", "import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Data, Router } from '@angular/router';\nimport { ServicesLogin } from '../../shared/services/services.login';\nimport { Message } from '../../shared/services/message';\nimport { DataLogin } from './login.entity';\nimport { RoutePaths } from '../../shared/utils/routes';\n\n@Component({\n  selector: 'app-login',\n  imports: [FormsModule,CommonModule, ReactiveFormsModule],\n  templateUrl: './login.html',\n  styleUrl: './login.scss'\n})\nexport class Login implements OnInit {\n\n    form!: FormGroup;\n    procesando = false;\n    constructor(private router:Router, private fb: FormBuilder, private _services: ServicesLogin, \n      private snackBar: Message) {\n\n         this.form =  this.fb.group({\n          username: new FormControl('', [Validators.required,  Validators.email]),\n          password: new FormControl('', [Validators.required, Validators.minLength(5)])\n      })\n\n    }\n\n\n    ngOnInit(): void {\n      \n      this.loadInfo();\n\n    }\n\n    loadInfo() {\n\n      this._services.loadData().subscribe({\n\n        next: ()=>{console.log('data cargada..')},\n        error: (err) => {\n          console.log(err);\n          this.snackBar.show(`UPS!! ha sucedido lo siguiente: ${err.message}`)}\n\n      })\n      sessionStorage.setItem(\"user\",\"\");\n      sessionStorage.setItem(\"role\",\"\");\n      sessionStorage.setItem(\"email\",\"\");\n\n    }\n\n     onSubmit() {\n\n      this.procesando = true;\n\n      this._services.validarLogin(this.form.get(\"username\")?.value,this.form.get(\"password\")?.value).subscribe({\n\n        next: (data:DataLogin) => {\n\n          sessionStorage.setItem(\"user\", data.name);\n          sessionStorage.setItem(\"role\", data.role);\n          sessionStorage.setItem(\"email\", data.email);\n\n          this.router.navigate(['/' + RoutePaths.HOME]);\n\n        },\n        error: (err) => {\n          console.log(err);\n          this.procesando = false;\n          this.snackBar.show(`UPS!! ha sucedido lo siguiente: ${err.message}`);\n        },\n        complete: ()=> {console.log('Proceso completado')}\n\n      }\n      )\n    \n\n    }\n\n\n\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Login } from './login';\n\ndescribe('Login', () => {\n  let component: Login;\n  let fixture: ComponentFixture<Login>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [Login]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(Login);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,cAAA;AAAA;AAAA,IAAAD,iBAAA;AAAA;AAAA;;;ICea;;;;;;;AAfb;AACA;AACA;AACA;AACA;AACA;AAEA;AAQO,IAAM,QAAN,MAAME,OAAK;MAIM;MAAuB;MAAyB;MAC1D;MAHV;MACA,aAAa;MACb,YAAoB,QAAuB,IAAyB,WAC1D,UAAiB;AADP,aAAA,SAAA;AAAuB,aAAA,KAAA;AAAyB,aAAA,YAAA;AAC1D,aAAA,WAAA;AAEL,aAAK,OAAQ,KAAK,GAAG,MAAM;UAC1B,UAAU,IAAI,YAAY,IAAI,CAAC,WAAW,UAAW,WAAW,KAAK,CAAC;UACtE,UAAU,IAAI,YAAY,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;SAC/E;MAEH;MAGA,WAAQ;AAEN,aAAK,SAAQ;MAEf;MAEA,WAAQ;AAEN,aAAK,UAAU,SAAQ,EAAG,UAAU;UAElC,MAAM,MAAI;AAAC,oBAAQ,IAAI,gBAAgB;UAAC;UACxC,OAAO,CAAC,QAAO;AACb,oBAAQ,IAAI,GAAG;AACf,iBAAK,SAAS,KAAK,mCAAmC,IAAI,OAAO,EAAE;UAAC;SAEvE;AACD,uBAAe,QAAQ,QAAO,EAAE;AAChC,uBAAe,QAAQ,QAAO,EAAE;AAChC,uBAAe,QAAQ,SAAQ,EAAE;MAEnC;MAEC,WAAQ;AAEP,aAAK,aAAa;AAElB,aAAK,UAAU,aAAa,KAAK,KAAK,IAAI,UAAU,GAAG,OAAM,KAAK,KAAK,IAAI,UAAU,GAAG,KAAK,EAAE,UAAU;UAEvG,MAAM,CAAC,SAAkB;AAEvB,2BAAe,QAAQ,QAAQ,KAAK,IAAI;AACxC,2BAAe,QAAQ,QAAQ,KAAK,IAAI;AACxC,2BAAe,QAAQ,SAAS,KAAK,KAAK;AAE1C,iBAAK,OAAO,SAAS,CAAC,MAAM,WAAW,IAAI,CAAC;UAE9C;UACA,OAAO,CAAC,QAAO;AACb,oBAAQ,IAAI,GAAG;AACf,iBAAK,aAAa;AAClB,iBAAK,SAAS,KAAK,mCAAmC,IAAI,OAAO,EAAE;UACrE;UACA,UAAU,MAAI;AAAE,oBAAQ,IAAI,oBAAoB;UAAC;SAElD;MAIH;;;;;;;;AA/DS,YAAK,WAAA;MANjB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,cAAc,mBAAmB;QACvD,UAAA;;OAED;OACY,KAAK;;;;;ACflB;;;AAEA,IAAAC;AAEA,aAAS,SAAS,MAAK;AACrB,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,KAAK;SAChB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,KAAK;AACvC,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["login_default", "init_login", "Login", "init_login"]
}
