{
  "version": 3,
  "sources": ["src/app/shared/guards/role-guard.spec.ts", "src/app/shared/guards/role-guard.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\r\nimport { CanActivateFn } from '@angular/router';\r\n\r\nimport { roleGuard } from './role-guard';\r\n\r\ndescribe('roleGuard', () => {\r\n  const executeGuard: CanActivateFn = (...guardParameters) => \r\n      TestBed.runInInjectionContext(() => roleGuard(...guardParameters));\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({});\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(executeGuard).toBeTruthy();\r\n  });\r\n});\r\n", "import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { RoutePaths } from '../utils/routes';\r\n\r\nexport const roleGuard: CanActivateFn = (route, state) => {\r\n  \r\n  const role = sessionStorage.getItem(\"role\");\r\n  const router = inject(Router); \r\n  \r\n  if (role !== 'admin') {\r\n\r\n    router.navigate(['/' + RoutePaths.HOME + '/' +RoutePaths.NOTFOUND]);\r\n    return false;\r\n\r\n  }\r\n\r\n  return true;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA;AACA;AAEO,IAAM,YAA2B,CAAC,OAAO,UAAS;AAEvD,QAAM,OAAO,eAAe,QAAQ,MAAM;AAC1C,QAAM,SAAS,OAAO,MAAM;AAE5B,MAAI,SAAS,SAAS;AAEpB,WAAO,SAAS,CAAC,MAAM,WAAW,OAAO,MAAK,WAAW,QAAQ,CAAC;AAClE,WAAO;EAET;AAEA,SAAO;AACT;;;ADZA,SAAS,aAAa,MAAK;AACzB,QAAM,eAA8B,IAAI,oBACpC,QAAQ,sBAAsB,MAAM,UAAU,GAAG,eAAe,CAAC;AAErE,aAAW,MAAK;AACd,YAAQ,uBAAuB,CAAA,CAAE;EACnC,CAAC;AAED,KAAG,qBAAqB,MAAK;AAC3B,WAAO,YAAY,EAAE,WAAU;EACjC,CAAC;AACH,CAAC;",
  "names": []
}
