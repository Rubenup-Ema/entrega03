{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\features\\users\\edit-user\\edit-user.html", "angular:jit:style:src\\app\\features\\users\\edit-user\\edit-user.scss", "src/app/features/users/edit-user/edit-user.ts"],
  "sourcesContent": ["<div class=\"container bg-light\">\r\n  <h2>Editar Usuario</h2>\r\n\r\n  <form class=\"mb-3\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n    \r\n    <!-- Campo ID -->\r\n    <div class=\"form-group\">\r\n      <label for=\"dni\">ID:</label>\r\n      <input \r\n        type=\"text\" \r\n        class=\"form-control\"\r\n        id=\"id\" \r\n        formControlName=\"id\" \r\n        placeholder=\"Ingrese ID\"\r\n        readonly>\r\n      <div *ngIf=\"userForm.get('id')?.invalid && userForm.get('id')?.touched\" class=\"text-danger mt-1\">\r\n        ID es requerido\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Campo Nombre -->\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Nombre</label>\r\n      <input \r\n        type=\"text\" \r\n        class=\"form-control\"\r\n        id=\"name\" \r\n        formControlName=\"name\" \r\n        placeholder=\"Ingrese nombre del usuario\">\r\n      <div *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.touched\" class=\"text-danger mt-1\">\r\n        Nombre del usuario es requerido\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Campo Email -->\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input \r\n        type=\"text\" \r\n        class=\"form-control\"\r\n        id=\"email\" \r\n        formControlName=\"email\" \r\n        placeholder=\"Ingrese email tunombre@tudominio.com\">\r\n      <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\" class=\"text-danger mt-1\">\r\n        Descripci\u00F3n es requerido\r\n      </div>\r\n    </div>\r\n\r\n     <!-- Campo Password -->\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password*</label>\r\n        <div class=\"input-group\">\r\n            <input \r\n            [type]=\"showPassword ? 'text' : 'password'\" \r\n            class=\"form-control\"\r\n            id=\"password\" \r\n            formControlName=\"password\" \r\n            placeholder=\"******\">\r\n            <button \r\n            class=\"btn btn-outline-secondary\" \r\n            type=\"button\" \r\n            (click)=\"togglePassword()\">\r\n            <mat-icon>{{showPassword ? 'visibility_off': 'visibility'}}</mat-icon> \r\n            </button>\r\n        </div>\r\n        <div *ngIf=\"userForm.get('password')?.invalid && userForm.get('password')?.touched\" class=\"text-danger mt-1\">\r\n            El password es requerido m\u00EDnimo 6 caracteres\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Campo Role -->\r\n    <div class=\"form-group\">\r\n        <label for=\"role\">Seleccione un Role:</label>\r\n        <select class=\"form-select\" formControlName=\"role\" id=\"role\">\r\n            <option value=\"\">-- Seleccionar Role--</option>\r\n            <option value=\"admin\">Administrador</option>\r\n            <option value=\"user\">Usuario</option>\r\n            <option value=\"standard\">Standard</option>\r\n        </select>\r\n          <div *ngIf=\"userForm.get('role')?.invalid && userForm.get('role')?.touched\" class=\"text-danger mt-1\">\r\n            Role es requerido\r\n        </div>\r\n    </div>\r\n   \r\n  </form>\r\n\r\n   <div class=\"row text-center mb-3\">\r\n\r\n        <div class=\"col text-center\">\r\n            <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-success\" [disabled]=\"userForm.invalid\" >Editar Usuario</button>\r\n            \r\n        </div>\r\n\r\n        <div class=\"col text-center\">\r\n            \r\n            <button type=\"button\" (click)=\"onReset()\" class=\"btn btn-danger\" >Salir</button>\r\n\r\n        </div>\r\n    \r\n\r\n    </div>\r\n</div>", "/* src/app/features/users/edit-user/edit-user.scss */\n/*# sourceMappingURL=edit-user.css.map */\n", "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { User } from '../../../shared/entities/entity';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  imports: [ReactiveFormsModule, CommonModule, MatIcon],\r\n  templateUrl: './edit-user.html',\r\n  styleUrl: './edit-user.scss'\r\n})\r\nexport class EditUser implements OnInit {\r\n\r\n userForm!: FormGroup;\r\n  @Output() userEdited = new EventEmitter<User>();\r\n  @Output() noChanges = new EventEmitter<boolean>();\r\n  showPassword: boolean = false;\r\n  private _userEdit!: User;\r\n  user: User = {id: 0, name:'', email:'', password:'', role:'', createdAt:''};\r\n \r\n  @Input() set userEdit(value: User) {\r\n\r\n    if (value) {\r\n      this._userEdit = value;\r\n      this.user = { ...value };\r\n\r\n      if (this.userForm) {\r\n\r\n        this.loadUserData();\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  constructor(private fb: FormBuilder) {\r\n\r\n  \r\n\r\n  }\r\n\r\nloadUserData(): void {\r\n\r\n   this.userForm.setValue({\r\n    id: this.user.id,\r\n    name: this.user.name,\r\n    email: this.user.email,\r\n    password: this.user.password,\r\n    role: this.user.role,\r\n  });\r\n\r\n}\r\n\r\n ngOnInit(): void {\r\n\r\n    this.userForm = this.fb.group({\r\n\r\n       id: [0, [Validators.required]],\r\n      name: ['', [Validators.required, Validators.minLength(5)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      role: ['', [Validators.required]],\r\n     \r\n    })\r\n\r\n    if (this._userEdit) {\r\n      this.loadUserData();\r\n    }\r\n    \r\n  }\r\n\r\n  onSubmit() {\r\n\r\n  \r\n    this.userEdited.emit(this.userForm.value);\r\n\r\n\r\n  }\r\n\r\n  onReset() {\r\n\r\n    this.noChanges.emit(true);\r\n\r\n  }\r\n\r\n  togglePassword() {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,kBAAA;AAAA;AAAA,IAAAD,qBAAA;AAAA;AAAA;;;ICYa;;;;;;;AAZb;AACA;AAEA;AACA;AAQO,IAAM,WAAN,MAAME,UAAQ;MAwBC;MAtBrB;MACW,aAAa,IAAI,aAAY;MAC7B,YAAY,IAAI,aAAY;MACtC,eAAwB;MAChB;MACR,OAAa,EAAC,IAAI,GAAG,MAAK,IAAI,OAAM,IAAI,UAAS,IAAI,MAAK,IAAI,WAAU,GAAE;UAE7D,SAAS,OAAW;AAE/B,YAAI,OAAO;AACT,eAAK,YAAY;AACjB,eAAK,OAAO,mBAAK;AAEjB,cAAI,KAAK,UAAU;AAEjB,iBAAK,aAAY;UAEnB;QAEF;MACF;MAEA,YAAoB,IAAe;AAAf,aAAA,KAAA;MAIpB;MAEF,eAAY;AAET,aAAK,SAAS,SAAS;UACtB,IAAI,KAAK,KAAK;UACd,MAAM,KAAK,KAAK;UAChB,OAAO,KAAK,KAAK;UACjB,UAAU,KAAK,KAAK;UACpB,MAAM,KAAK,KAAK;SACjB;MAEH;MAEC,WAAQ;AAEL,aAAK,WAAW,KAAK,GAAG,MAAM;UAE3B,IAAI,CAAC,GAAG,CAAC,WAAW,QAAQ,CAAC;UAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;UACzD,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;UACnD,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;UAC7D,MAAM,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;SAEjC;AAED,YAAI,KAAK,WAAW;AAClB,eAAK,aAAY;QACnB;MAEF;MAEA,WAAQ;AAGN,aAAK,WAAW,KAAK,KAAK,SAAS,KAAK;MAG1C;MAEA,UAAO;AAEL,aAAK,UAAU,KAAK,IAAI;MAE1B;MAEA,iBAAc;AACZ,aAAK,eAAe,CAAC,KAAK;MAC5B;;;;;6BAzEC,OAAM,CAAA;4BACN,OAAM,CAAA;2BAKN,MAAK,CAAA;;;AATK,eAAQ,WAAA;MANpB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,qBAAqB,cAAc,OAAO;QACpD,UAAA;;OAED;OACY,QAAQ;;;",
  "names": ["edit_user_default", "init_edit_user", "EditUser"]
}
