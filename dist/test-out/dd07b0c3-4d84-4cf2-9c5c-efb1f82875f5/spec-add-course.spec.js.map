{
  "version": 3,
  "sources": ["src/app/features/course/add-course/add-course.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { AddCourse } from './add-course';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\n\ndescribe('AddCourse', () => {\n  \n  let fb: FormBuilder;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule],\n      providers: [FormBuilder]\n    });\n    fb = TestBed.inject(FormBuilder);\n  });\n\n  fit('Debería crear el formulario de los cursos con valores iniciales', () => {\n    const form = fb.group({\n      id: [0, [Validators.required]],\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n\n    expect(form.value).toEqual({\n      id: 0,\n      title: '',\n      description: ''\n    });\n\n    expect(form.valid).toBeFalse(); \n  });\n\n  fit('Debería ser validar que  todos los campos tengan valores', () => {\n    const form = fb.group({\n      id: [0, [Validators.required]],\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n\n    form.setValue({\n      id: 1,\n      title: 'Angular',\n      description: 'Curso Angular'\n    });\n\n    expect(form.valid).toBeTrue();\n  });\n\n  fit('Debería marcar \"title\" como inválido si está vacío', () => {\n    const form = fb.group({\n      id: [1, [Validators.required]],\n      title: ['', Validators.required],\n      description: ['algo', Validators.required]\n    });\n\n    const titleControl = form.get('title');\n    expect(titleControl?.valid).toBeFalse();\n    expect(titleControl?.errors?.['required']).toBeTrue();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAGA;AAEA,SAAS,aAAa,MAAK;AAEzB,MAAI;AAEJ,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC7B,SAAS,CAAC,mBAAmB;MAC7B,WAAW,CAAC,WAAW;KACxB;AACD,SAAK,QAAQ,OAAO,WAAW;EACjC,CAAC;AAED,MAAI,sEAAmE,MAAK;AAC1E,UAAM,OAAO,GAAG,MAAM;MACpB,IAAI,CAAC,GAAG,CAAC,WAAW,QAAQ,CAAC;MAC7B,OAAO,CAAC,IAAI,WAAW,QAAQ;MAC/B,aAAa,CAAC,IAAI,WAAW,QAAQ;KACtC;AAED,WAAO,KAAK,KAAK,EAAE,QAAQ;MACzB,IAAI;MACJ,OAAO;MACP,aAAa;KACd;AAED,WAAO,KAAK,KAAK,EAAE,UAAS;EAC9B,CAAC;AAED,MAAI,+DAA4D,MAAK;AACnE,UAAM,OAAO,GAAG,MAAM;MACpB,IAAI,CAAC,GAAG,CAAC,WAAW,QAAQ,CAAC;MAC7B,OAAO,CAAC,IAAI,WAAW,QAAQ;MAC/B,aAAa,CAAC,IAAI,WAAW,QAAQ;KACtC;AAED,SAAK,SAAS;MACZ,IAAI;MACJ,OAAO;MACP,aAAa;KACd;AAED,WAAO,KAAK,KAAK,EAAE,SAAQ;EAC7B,CAAC;AAED,MAAI,kEAAsD,MAAK;AAC7D,UAAM,OAAO,GAAG,MAAM;MACpB,IAAI,CAAC,GAAG,CAAC,WAAW,QAAQ,CAAC;MAC7B,OAAO,CAAC,IAAI,WAAW,QAAQ;MAC/B,aAAa,CAAC,QAAQ,WAAW,QAAQ;KAC1C;AAED,UAAM,eAAe,KAAK,IAAI,OAAO;AACrC,WAAO,cAAc,KAAK,EAAE,UAAS;AACrC,WAAO,cAAc,SAAS,UAAU,CAAC,EAAE,SAAQ;EACrD,CAAC;AACH,CAAC;",
  "names": []
}
